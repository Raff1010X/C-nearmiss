<Application x:Class="ZPW.Application"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ZPW" 
             xmlns:vm="clr-namespace:ZPW.ViewModel" 
             StartupUri="View\StartSplash.xaml"
             xmlns:controls="clr-namespace:ZPW.View.Kontrolki"
             >



    <Application.Resources>
        <vm:ZPW x:Key="zpw"/>
        
        <FontFamily x:Key="Montserrat-Regular">./Fonts/Montserrat-Regular.ttf#Montserrat</FontFamily>
        <FontFamily x:Key="Montserrat-Bold">./Fonts/Montserrat-Bold.ttf#Montserrat</FontFamily>
        <FontFamily x:Key="Montserrat-Light">./Fonts/Montserrat-Light.ttf#Montserrat</FontFamily>
        
        
        <vm:BoolToStringConverter x:Key="BoolToStringConverter" />        
        <vm:BoolToString2Converter x:Key="BoolToString2Converter" />        
        <vm:FileToFullPathConverter x:Key="FileToFullPathConverter" />
        <vm:BoolReverseConverter x:Key="BoolReverseConverter" />        
        <vm:StrechToConverter x:Key="StrechToConverter" />
        <vm:NameToBoolConverter x:Key="NameToBoolConverter" />
        <vm:NoStringConverter x:Key="NoStringConverter" />
        <vm:MapPosConverter x:Key="MapPosConverter" />
        <vm:PinSizeConverter x:Key="PinSizeConverter" />
        <vm:VisConverter x:Key="VisConverter" />
        <vm:Vis2Converter x:Key="Vis2Converter" />
        <vm:Vis3Converter x:Key="Vis3Converter" />
            <vm:WidhtHeightConverter x:Key="WidhtHeightConverter" />
            <vm:TopLeftConverter x:Key="TopLeftConverter" />
        <vm:RectConvertor x:Key="RectConvertor" />
        <vm:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <vm:MarginConverter x:Key="MarginConverter" />


        <Style x:Key="MyWindowStyle" TargetType="{x:Type Window}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="BorderThickness" Value="0,0,0,0" />
            <Setter Property="BorderBrush"  Value="#104068" />
            <Setter Property="Topmost"  Value="True"/>
            <Setter Property="AllowsTransparency"  Value="True"/>
            <Setter Property="ResizeMode"  Value="CanResizeWithGrip"/>
            <Setter Property="FontFamily"  Value="{StaticResource Montserrat-Regular}"/>
            <Setter Property="Clip">
                <Setter.Value>
                    <RectangleGeometry  RadiusX="7" RadiusY="7">
                        <RectangleGeometry.Rect>
                            <MultiBinding Converter="{StaticResource RectConvertor}">
                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" Path="ActualWidth" />
                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" Path="ActualHeight"/>
                            </MultiBinding>
                        </RectangleGeometry.Rect>
                    </RectangleGeometry>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <Setter Property="BorderThickness"  Value="6,6,6,6"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GridShadow" TargetType="Grid">
            <Setter Property="Margin"  Value="15"/>
            <Setter Property="Effect">
                <Setter.Value>
                <DropShadowEffect ShadowDepth="5"
                                Direction="330"
                                Color="DarkBlue"
                                Opacity="0.5"
                                BlurRadius="15"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="GroupBox">
            <Setter Property="Background" Value="#F7FBFF"/>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Margin"  Value="5,0,5,5" />
            <Setter Property="BorderBrush"  Value="#6994B8" />
            <Setter Property="BorderThickness"  Value="1" />
        </Style>

        <Style TargetType="DatePicker">
            <Setter Property="Margin"  Value="5,0,5,5" />
            <Setter Property="Foreground"  Value="DarkRed" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>
        
        <Style TargetType="DatePickerTextBox">
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Margin"  Value="0,0,0,0" />
        </Style>
        
        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Margin"  Value="5,0,5,5" />
            <Setter Property="TextWrapping"  Value="Wrap" />
            <Setter Property="MinHeight"  Value="25" />
            <Setter Property="MaxHeight"  Value="1000" />
            <Setter Property="Foreground"  Value="DarkRed" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>

       <!--<Style TargetType="ComboBox">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Margin"  Value="5,0,5,5" />
            <Setter Property="Foreground"  Value="DarkRed" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>-->


  <Style x:Key="ComboboxButtonStyle" TargetType="{x:Type ToggleButton}">  
       <Setter Property="Template">  
         <Setter.Value>  
           <ControlTemplate TargetType="{x:Type ToggleButton}">  
             <Border   
                SnapsToDevicePixels="True"
                Background="White"   
                x:Name="border"   
                CornerRadius="0,3,3,0"   
                BorderThickness="0.75,1,1,1"  
                Margin="-5,0,0,0"  
                BorderBrush="DarkGray"> 
               <ContentPresenter IsHitTestVisible="True"/>  
             </Border>  
           </ControlTemplate>
         </Setter.Value> 
       </Setter>
     </Style>  
  <Style x:Key="ComboboxTextBoxStyle" TargetType="{x:Type TextBox}">  
    <Setter Property="IsEnabled" Value="false"/> 
     <Setter Property="Template">  
         <Setter.Value>  
           <ControlTemplate TargetType="{x:Type TextBox}">  
             <Grid>  
               <Border 
                SnapsToDevicePixels="True"
                CornerRadius="3,0,0,3"  
                BorderThickness="1,1,0,1"  
                Background="White"  
                BorderBrush="darkgray">  
                 <Grid>
                    <ScrollViewer x:Name="PART_ContentHost"/>  
                </Grid>
               </Border>  
             </Grid>  
           </ControlTemplate>  
         </Setter.Value>  
       </Setter>  
     </Style> 

 <Style TargetType="{x:Type ComboBox}">  
    <EventSetter Event="PreviewMouseDown" Handler="ComboTextBox_MouseDown"/>
       <Setter Property="HorizontalContentAlignment" Value="Left"/>  
       <Setter Property="VerticalContentAlignment" Value="Center"/>  
       <Setter Property="Foreground" Value="Darkred"/>  
       <Setter Property="FontSize" Value="15"/>  
       <Setter Property="Margin" Value="5,0,5,5"/>  
       <Setter Property="Template">  
         <Setter.Value>  
           <ControlTemplate TargetType="{x:Type ComboBox}">  
             <Grid>  
               <Grid.ColumnDefinitions>  
                 <ColumnDefinition/>  
                 <ColumnDefinition MaxWidth="18"/>  
               </Grid.ColumnDefinitions>  
               <TextBox Name="PART_EditableTextBox"  
                Style="{StaticResource ComboboxTextBoxStyle}"  
                Padding="0,0,0,0"  
                Height="25"/>  
               <ToggleButton Grid.Column="1" Margin="0"  
               Height="25"  
               Style="{StaticResource ComboboxButtonStyle}"  
               Focusable="False"  
               IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"  
               ClickMode="Press">  
                 <Path Grid.Column="1"  
                  Margin="0,0,0,0"  
                  HorizontalAlignment="Center"  
                  VerticalAlignment="Center"  
                  Data="M 0 0 L 4 4 L 8 0 Z"  
                  Fill="Darkred" />  
               </ToggleButton>  
               <ContentPresenter 
                Name="ContentSite"  
                Content="{TemplateBinding SelectionBoxItem}"  
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"  
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"  
                VerticalAlignment="Center"  
                HorizontalAlignment="Left" 
                />  
               <Popup Name="Popup"  
               Placement="Bottom"  
               IsOpen="{TemplateBinding IsDropDownOpen}"
               AllowsTransparency="True"   
               Focusable="False"  
               PopupAnimation="Slide">  
                 <Grid Name="DropDown"  
                 Background="White"   
                 SnapsToDevicePixels="True"          
                 MinWidth="{TemplateBinding ActualWidth}"  
                 MaxHeight="{TemplateBinding MaxDropDownHeight}">  
                   <ScrollViewer Margin="0,0,1,0" SnapsToDevicePixels="True">  
                     <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />  
                   </ScrollViewer>
                   <Border   
                   x:Name="DropDownBorder"  
                   BorderThickness="0.75"  
                   CornerRadius="3"  
                   BorderBrush="#7eb4ea"/>  
  
                 </Grid>  
               </Popup>  
             </Grid>  
           </ControlTemplate>  
         </Setter.Value>  
       </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>                
        </Style.Triggers>
     </Style> 


        
        <Style TargetType="CheckBox">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Margin"  Value="5,5,5,5" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>
        
        <Style TargetType="vm:MultipleSelectionListBox">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin"  Value="5,5,5,5" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>

        
        <Style TargetType="{x:Type ListBoxItem}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="DarkRed" />
                    <Setter Property="Background" Value="AliceBlue" />
                </Trigger>                
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="DarkRed" />
                    <Setter Property="Background" Value="AliceBlue" />
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            Padding="{TemplateBinding Control.Padding}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                Content="{TemplateBinding ContentControl.Content}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ListBoxButton" TargetType="Button">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Margin"  Value="0,5,5,5" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Height"  Value="auto" />
            <Setter Property="Width"  Value="auto" />
            <Setter Property="Background"  Value="AliceBlue" />
            <Setter Property="Foreground"  Value="#010101" />
            <Setter Property="BorderBrush"  Value="#104068" />
            <Setter Property="BorderThickness"  Value="0.75" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5" />
                </Style>
                <Style TargetType="Image">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.9" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontSize" Value="17" />
                    <Setter Property="Foreground" Value="DarkRed" />
                </Trigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding 
                            RelativeSource={RelativeSource 
                            Mode=FindAncestor, 
                            AncestorType={x:Type ListBoxItem}},
                            Path=IsSelected}" 
                            Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>

            </Style.Triggers>
        </Style>


        <Style TargetType="Button">
            <Setter Property="Margin"  Value="5,5,5,5" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Height"  Value="auto" />
            <Setter Property="Width"  Value="auto" />
            <Setter Property="Background"  Value="AliceBlue" />
            <Setter Property="Foreground"  Value="#010101" />
            <Setter Property="BorderBrush"  Value="#104068" />
            <Setter Property="BorderThickness"  Value="0.75" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5" />
                </Style>
                <Style TargetType="Image">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.9" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontSize" Value="17" />
                    <Setter Property="Foreground" Value="DarkRed" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="ContextMenu">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height"  Value="auto" />
            <Setter Property="Width"  Value="auto" />
            <Setter Property="Foreground"  Value="#010101" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="Padding" Value="0,0,0,0" />
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>

    <!--<Style TargetType="ContextMenu">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height"  Value="auto" />
            <Setter Property="Width"  Value="auto" />
            <Setter Property="Foreground"  Value="#010101" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="True" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border x:Name="Border"
                            Background="#f0f0f0"
                            CornerRadius="3"
                            BorderThickness="1"
                            >
                    <Border.BorderBrush>
                        <SolidColorBrush Color="darkgray" />
                    </Border.BorderBrush>
                    <StackPanel IsItemsHost="True"
                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                    <Trigger Property="HasDropShadow" Value="True">
                        <Setter TargetName="Border" Property="Padding" Value="2,2,2,2" />
                        <Setter TargetName="Border" Property="CornerRadius" Value="3" />
                    </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
            </Setter>
        </Style>-->

        <Style TargetType="ToolTip">
            <Setter Property="FontFamily" Value="{StaticResource Montserrat-Regular}"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources> 
        </Style>

        <Style TargetType="Menu">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height"  Value="auto" />
            <Setter Property="Width"  Value="auto" />
            <Setter Property="Background"  Value="AliceBlue" />
            <Setter Property="Foreground"  Value="#010101" />
            <Setter Property="FontFamily" Value="{StaticResource Montserrat-Regular}"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources> 
        </Style>
        <Style TargetType="MenuItem">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height"  Value="22" />
            <Setter Property="Width"  Value="auto" />
            <Setter Property="Foreground"  Value="#010101" />
            <Setter Property="FontFamily" Value="{StaticResource Montserrat-Regular}"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="DarkRed" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="ListBoxGridStyle" TargetType="Grid">
            <Setter Property="Background" Value="#ffeeee"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="150"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Grid.Column" Value="0"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Wykonane}"  Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#eeffee"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0.33,0" EndPoint="0.33,1">
            <GradientStop Color="LightGray" Offset="0"/>
            <GradientStop Color="DarkGray" Offset="0.33"/>
            <GradientStop Color="DimGray" Offset="0.66"/>
            <GradientStop Color="#3e3e3e" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HeaderBorderBrush" StartPoint="0.33,0" EndPoint="0.33,1">
            <GradientStop Color="Black" Offset="0.33"/>
            <GradientStop Color="DarkGray" Offset="0.75"/>
            <GradientStop Color="LightGray" Offset="1"/>
        </LinearGradientBrush>
        
        <Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#7fafd5" /><!--{StaticResource HeaderBrush}-->
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="Black" /><!--{StaticResource HeaderBorderBrush}-->
            <Setter Property="BorderThickness" Value="0.75" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="0" />    
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="Height" Value="35" />
        </Style>
 <!--
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>


 -->       
        <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.RowSpan="2" Margin="{TemplateBinding Padding}" Grid.ColumnSpan="2"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Width="8"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Height="8"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="White" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Background="White">
                            <Border Background="#7fafd5" BorderThickness="0.5" BorderBrush="Black" CornerRadius="4"/>
                        </Grid> 
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Background="White">
                            <Border Background="#7fafd5" BorderThickness="0.5" BorderBrush="Black" CornerRadius="4"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>       
        <Style TargetType="ScrollBar">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="MinWidth" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="White">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*"/>
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource VerticalThumb}"  Width="8"/>
                                    <!--Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"-->
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="10"/>
                    <Setter Property="MinHeight" Value="10"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="White">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.00001*"/>
                                    </Grid.ColumnDefinitions>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{DynamicResource HorizontalThumb}" Height="8"/>
                                            <!-- Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"-->
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style> 



        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="MaxWidth" Value="2560"/>
            <Setter Property="MaxHeight" Value="1600"/>
            <Setter Property="EnableColumnVirtualization" Value="True"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
            <Setter Property="VirtualizingStackPanel.IsVirtualizingWhenGrouping" Value="True"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="IsTextSearchEnabled" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0.5"/>           
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="CanUserResizeRows" Value="True"/>
            <Setter Property="CanUserSortColumns" Value="True"/> 
            <Setter Property="Background" Value="White"/> 
            <Setter Property="Margin" Value="0.5,0,-0.5,0"/> 
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2" />
                </Style>
            </Style.Resources>
        </Style>
        <Style TargetType="DataGridRow">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="AliceBlue" />
                    <Setter Property="Foreground" Value="DarkRed" />
                </Trigger> 
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                            Path=IsSelected}" 
                            Value="True"/>
                        <Condition Binding="{Binding Wykonane}"  Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#eeffee"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                            Path=IsSelected}" 
                            Value="True"/>
                        <Condition Binding="{Binding Wykonane}"  Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#ffeeee"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                            Path=IsSelected}" 
                            Value="True"/>
                        <Condition Binding="{Binding Wykonane}"  Value="True"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                            Path=IsMouseOver}" 
                            Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#eeffee"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                            Path=IsSelected}" 
                            Value="True"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                            Path=IsMouseOver}" 
                            Value="True"/>
                    <Condition Binding="{Binding Wykonane}"  Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#ffeeee"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>




        <Style TargetType="DataGridCell">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="23"/>
            <Style.Triggers>
               <!--<DataTrigger Binding="{Binding Wykonane}"  Value="True">
                    <Setter Property="Background" Value="#eeffee" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Wykonane}"  Value="False">
                    <Setter Property="Background" Value="#ffeeee" />
                </DataTrigger>-->
                <!--<Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="AliceBlue"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderThickness" Value="0"/>-->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding 
                            RelativeSource={RelativeSource 
                            Mode=FindAncestor, 
                            AncestorType={x:Type DataGridRow}},
                            Path=IsSelected}" 
                            Value="True"/>
                        <Condition Binding="{Binding Wykonane}"  Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#eeffee"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding 
                            RelativeSource={RelativeSource 
                            Mode=FindAncestor, 
                            AncestorType={x:Type DataGridRow}},
                            Path=IsSelected}" 
                            Value="True"/>
                        <Condition Binding="{Binding Wykonane}"  Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#ffeeee"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="TextBlock">
            <Setter Property="Margin"  Value="5,0,5,0" />
        </Style>

        <Style x:Key="ShadowTB" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="{StaticResource Montserrat-Light}"/>
            <Setter Property="TextBlock.Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="5"
                                    Direction="330"
                                    Color="DarkBlue"
                                    Opacity="0.5"
                                    BlurRadius="15"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HiglighTB" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin"  Value="5,0,5,0" />
            <Setter Property="vm:TextBlockHighlighter.Selection" Value="{Binding Source={StaticResource zpw}, Path=HighLightString, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="vm:TextBlockHighlighter.HighlightColor"  Value="LightGreen" />
            <Setter Property="vm:TextBlockHighlighter.Forecolor"  Value="Teal" />
        </Style>

 <!--      <Style x:Key="HiglighTB" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin"  Value="5,0,5,0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={StaticResource zpw}, Path=CollectionView, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Vis3Converter}}"  Value="True">
                    <Setter Property="vm:TextBlockHighlighter.Selection" Value="{Binding Source={StaticResource zpw}, Path=HighLightString, UpdateSourceTrigger=PropertyChanged}"/>
                    <Setter Property="vm:TextBlockHighlighter.HighlightColor"  Value="LightGreen" />
                    <Setter Property="vm:TextBlockHighlighter.Forecolor"  Value="Teal" />
                </DataTrigger>
            </Style.Triggers>       
        </Style>-->

        <!--<Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border" Background="#608bb0" Margin="2,2,-4,0" BorderBrush="#608bb0" BorderThickness="1,1,1,1" CornerRadius="5">
                                <ContentPresenter x:Name="ContentSite" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2,2,12,2" RecognizesAccessKey="True">
                                </ContentPresenter>
                            </Border>
                            <Rectangle Height="200" Width="4" Margin="0,0,-4,0" Stroke="#85bfef" VerticalAlignment="Bottom" HorizontalAlignment="Right" StrokeThickness="0" Fill="#85bfef"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Normal" />
                                <Setter Property="FontSize" Value="20" />
                                <Setter TargetName="ContentSite" Property="Width" Value="25" />
                                <Setter TargetName="Border" Property="Background" Value="#85bfef" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#85bfef" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="FontWeight" Value="Normal" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentPresenter Content="{TemplateBinding Content}">
                            <ContentPresenter.LayoutTransform>
                                <RotateTransform Angle="270" />
                            </ContentPresenter.LayoutTransform>
                        </ContentPresenter>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Height" Value="180" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontFamily" Value="{StaticResource Montserrat-Light}" />
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="UseLayoutRounding" Value="False" />
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontFamily"  Value="{StaticResource Montserrat-Regular}"/>
                    <Setter Property="FontSize" Value="18" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontFamily"  Value="{StaticResource Montserrat-Regular}"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Height" Value="35" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontFamily"  Value="{StaticResource Montserrat-Light}"/>
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="UseLayoutRounding" Value="False" />
            <Setter Property="Background"  Value="AliceBlue" />
            <Setter Property="BorderBrush"  Value="#6994B8" />
            <Setter Property="Foreground"  Value="#104068" />
        </Style>-->
                              
                                
    <Style x:Key="TolTipGridBackground" TargetType="{x:Type ToolTip}">    
       <Setter Property="Background" Value="#ffeeee"/>
       <Setter Property="FontFamily"  Value="{StaticResource Montserrat-Regular}"/>
           <Style.Triggers>
                <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Wykonane}"  Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="#eeffee"/>
                </MultiDataTrigger>
         </Style.Triggers> 
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5" />
                </Style>
            </Style.Resources>
    </Style>

    <Style x:Key="Pin" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/View/Pictures/Pin.png"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Wykonane}" Value="True">
                <Setter Property="Source" Value="/View/Pictures/PinG.png"/>
                <Setter Property="Cursor" Value="Hand"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Pin2" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/View/Pictures/Pin.png"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SelectedWykonane}" Value="True">
                <Setter Property="Source" Value="/View/Pictures/PinG.png"/>
                <Setter Property="Cursor" Value="Hand"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Moje-zgłoszenia" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/View/Pictures/Moje.png"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding PokażMojeZgłoszenia, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <Setter Property="Source" Value="/View/Pictures/MojeSelected.png"/>
                <Setter Property="Cursor" Value="Hand"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Obserwowane-zgłoszenia" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/View/Pictures/Obserwowane.png"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding PokażObserwowaneZgłoszenia, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <Setter Property="Source" Value="/View/Pictures/ObserwowaneSelected.png"/>
                <Setter Property="Cursor" Value="Hand"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Filter-zgłoszenia" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/View/Pictures/Filter.png"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding PokażNowyFiltr, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <Setter Property="Source" Value="/View/Pictures/FilterSelected.png"/>
                <Setter Property="Cursor" Value="Hand"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Tabela" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/View/Pictures/Tabela.png"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding View, UpdateSourceTrigger=PropertyChanged}" Value="Tabela">
                <Setter Property="Source" Value="/View/Pictures/TabelaSelected.png"/>
                <Setter Property="Cursor" Value="Hand"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Lista" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/View/Pictures/Lista.png"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding View, UpdateSourceTrigger=PropertyChanged}" Value="Lista">
                <Setter Property="Source" Value="/View/Pictures/ListaSelected.png"/>
                <Setter Property="Cursor" Value="Hand"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Karty" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/View/Pictures/Karty.png"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding View, UpdateSourceTrigger=PropertyChanged}" Value="Karty">
                <Setter Property="Source" Value="/View/Pictures/KartySelected.png"/>
                <Setter Property="Cursor" Value="Hand"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
     <Style x:Key="Zgłoszenie" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/View/Pictures/Zgłoszenie.png"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding View, UpdateSourceTrigger=PropertyChanged}" Value="Zgłoszenie">
                <Setter Property="Source" Value="/View/Pictures/ZgłoszenieSelected.png"/>
                <Setter Property="Cursor" Value="Hand"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>   
     <Style x:Key="Mapa" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/View/Pictures/Mapa.png"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding View, UpdateSourceTrigger=PropertyChanged}" Value="Mapa">
                <Setter Property="Source" Value="/View/Pictures/MapaSelected.png"/>
                <Setter Property="Cursor" Value="Hand"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>   
     <Style x:Key="Statystyki" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="/View/Pictures/Wykres.png"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding View, UpdateSourceTrigger=PropertyChanged}" Value="Statystyki">
                <Setter Property="Source" Value="/View/Pictures/WykresSelected.png"/>
                <Setter Property="Cursor" Value="Hand"/>
            </DataTrigger>
        </Style.Triggers>
    </Style> 


    </Application.Resources>
</Application>
